import { Component } from "../../hierarchy_object/Component";
import { ComponentConstructor } from "../../hierarchy_object/ComponentConstructor";
import { PointerGridEvent } from "./PointerGridInputListener";
export declare class GridPointer extends Component {
    protected readonly _disallowMultipleComponent: boolean;
    protected readonly _requiredComponents: ComponentConstructor[];
    private _pointerGridInputListener;
    private _pointerZoffset;
    private _pointerObject;
    private _pointerRenderer;
    private _onPointerDownDelegates;
    private _onPointerUpDelegates;
    private _onPointerMoveDelegates;
    private _isMouseDown;
    private readonly _onPointerEnterBind;
    private readonly _onPointerLeaveBind;
    private readonly _onPointerDownBind;
    private readonly _onPointerUpBind;
    private readonly _onPointerMoveBind;
    protected start(): void;
    onDestroy(): void;
    private onPointerEnter;
    private onPointerLeave;
    private onPointerDown;
    private onPointerUp;
    private onPointerMove;
    private updatePointerPosition;
    addOnPointerDownEventListener(delegate: (event: PointerGridEvent) => void): void;
    removeOnPointerDownEventListener(delegate: (event: PointerGridEvent) => void): void;
    addOnPointerUpEventListener(delegate: (event: PointerGridEvent) => void): void;
    removeOnPointerUpEventListener(delegate: (event: PointerGridEvent) => void): void;
    addOnPointerMoveEventListener(delegate: (event: PointerGridEvent) => void): void;
    removeOnPointerMoveEventListener(delegate: (event: PointerGridEvent) => void): void;
    get pointerZoffset(): number;
    set pointerZoffset(value: number);
}
