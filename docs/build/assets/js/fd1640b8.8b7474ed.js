"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[554],{3367:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>k,contentTitle:()=>u,default:()=>w,frontMatter:()=>h,metadata:()=>g,toc:()=>b});var a=n(7462),i=(n(7294),n(3905)),o=n(7346),s=n(3274),r=n(2684),l=n(6324),c=n(4532),p=n(8172);class d extends p.w{constructor(){super(...arguments),this._rotationSpeed=1}update(){this.gameObject.transform.rotateZ(this._rotationSpeed*this.engine.time.deltaTime)}}class m extends s.A{run(){const e=this.instantiater;return this.sceneBuilder.withChild(e.buildGameObject("camera",new c.P(0,0,10)).withComponent(r.V)).withChild(e.buildGameObject("sprite1").withComponent(l._,(e=>{e.asyncSetImageFromPath("https://c.tenor.com/jJalYO9p0PAAAAAd/hatsune-miku-plush.gif"),e.imageWidth=6,e.imageHeight=6})).withComponent(d))}}const h={},u="Create Component",g={unversionedId:"getting-started/create-component",id:"getting-started/create-component",title:"Create Component",description:"Let's create our Component and add them to the GameObject",source:"@site/docs/1-getting-started/4-create-component.mdx",sourceDirName:"1-getting-started",slug:"/getting-started/create-component",permalink:"/the-world-engine.ts/build/docs/getting-started/create-component",draft:!1,editUrl:"https://github.com/The-World-Space/the-world-engine.ts/tree/main/docs/docusaurus/docs/1-getting-started/4-create-component.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Add Sprite",permalink:"/the-world-engine.ts/build/docs/getting-started/add-sprite"},next:{title:"Create Component: Sprite Animations",permalink:"/the-world-engine.ts/build/docs/getting-started/sprite-animations"}},k={},b=[{value:"Rotator Component",id:"rotator-component",level:2},{value:"Component Messages",id:"component-messages",level:2},{value:"Basic Messages",id:"basic-messages",level:3},{value:"Physics Messages",id:"physics-messages",level:3},{value:"Unsafe Messages",id:"unsafe-messages",level:3}],C={toc:b};function w(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},C,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"create-component"},"Create Component"),(0,i.kt)("p",null,"Let's create our ",(0,i.kt)("inlineCode",{parentName:"p"},"Component")," and add them to the ",(0,i.kt)("inlineCode",{parentName:"p"},"GameObject")),(0,i.kt)("admonition",{title:"tip",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"Component corresponds to Unity's ",(0,i.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/ScriptReference/MonoBehaviour.html"},"MonoBehaviour")," class.")),(0,i.kt)("h2",{id:"rotator-component"},"Rotator Component"),(0,i.kt)("p",null,"Let's make a component that rotates objects at a constant speed"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="./src/asset/script/Rotator.ts"',title:'"./src/asset/script/Rotator.ts"'},'import { Component } from "the-world-engine";\n\nexport class Rotator extends Component {\n    private readonly _rotationSpeed: number = 1;\n    \n    public update(): void { // update is called once per frame\n        this.gameObject.transform.rotateZ(\n            this._rotationSpeed * this.engine.time.deltaTime);\n    }\n}\n')),(0,i.kt)("p",null,"then we can add it to our ",(0,i.kt)("inlineCode",{parentName:"p"},"GameObject")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="./src/asset/Bootstrapper.ts"',title:'"./src/asset/Bootstrapper.ts"'},'//...\n.withChild(instantiater.buildGameObject("sprite1", new Vector3(0, 0, 0))\n    .withComponent(CssSpriteRenderer, c => {\n        c.asyncSetImageFromPath("https://c.tenor.com/jJalYO9p0PAAAAAd/hatsune-miku-plush.gif");\n        c.imageWidth = 6;\n        c.imageHeight = 6;\n    })\n    .withComponent(Rotator))\n//...\n')),(0,i.kt)(o.Z,{bootstrapper:m,ignoreEvents:!0,mdxType:"DocumentGame"}),(0,i.kt)("h2",{id:"component-messages"},"Component Messages"),(0,i.kt)("p",null,"the component messages are called when the gameObject meets certain conditions."),(0,i.kt)("p",null,"The list below is a list of the available messages."),(0,i.kt)("h3",{id:"basic-messages"},"Basic Messages"),(0,i.kt)("p",null,"These are the most commonly used messages."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"awake"),": awake is called when the script instance is being loaded."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"start"),": start is called on the frame when a script is enabled just before any of the update methods are called the first time."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"update"),": update is called every frame, if the Component is enabled."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"onDestroy"),": Destroying the attached Component will result in the game or Scene receiving onDestroy."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"onEnable"),": This function is called when the object becomes enabled and active."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"onDisable"),": This function is called when the behaviour becomes disabled.")),(0,i.kt)("h3",{id:"physics-messages"},"Physics Messages"),(0,i.kt)("p",null,"These are the messages related to game engine built-in physics engine(box2d)."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"onCollisionEnter2D"),": Sent when an incoming collider makes contact with this object's collider (2D physics only)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"onCollisionExit2D"),": Sent when a collider on another object stops touching this object's collider (2D physics only)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"onCollisionStay2D"),": Sent each frame where a collider on another object is touching this object's collider (2D physics only)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"onTriggerEnter2D"),": Sent when another object enters a trigger collider attached to this object (2D physics only)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"onTriggerExit2D"),": Sent when another object leaves a trigger collider attached to this object (2D physics only)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"onTriggerStay2D"),": Sent each frame where another object is within a trigger collider attached to this object (2D physics only).")),(0,i.kt)("h3",{id:"unsafe-messages"},"Unsafe Messages"),(0,i.kt)("p",null,"If you add or remove GameObjects or Components within this messages, proper behavior is not guaranteed (performance reasons)."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"onWorldMatrixUpdated"),": This function is called when the world matrix is updated.")))}w.isMDXComponent=!0}}]);