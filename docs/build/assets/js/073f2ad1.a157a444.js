"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[168],{6327:(t,e,n)=>{n.d(e,{l:()=>h});var i=n(546),s=n(251),r=n(7111),l=n(983),o=n(6868),a=n(9484);class h extends i.W{constructor(){super(...arguments),this._planeSize=null}withPlaneSize(t){return this._planeSize=t,this}make(){return this.gameObjectBuilder.withComponent(s.N,(t=>{t.offset=-100})).withComponent(r.n,(t=>{t.chunkSize=15,t.filter.brightness=1.5,t.tileResolutionX=16,t.tileResolutionY=16,l.E.loadImageFromPath(a.Z).then((e=>{var n,i;if(!t.exists)return;t.imageSources=[new o.I(e,18,13)];const s={i:0,a:24},r=null!=(n=null==(i=this._planeSize)?void 0:i.ref)?n:51,l=[];for(let t=0;t<r;t++){l[t]=[];for(let e=0;e<r;e++)l[t][e]=s}const a=Math.floor(r/2);t.drawTileFromTwoDimensionalArray(l,-a,-a)}))}))}}},2440:(t,e,n)=>{n.d(e,{Y:()=>m});var i=n(546),s=n(7888),r=n(251),l=n(5216),o=n(983),a=n(6868),h=n(291),d=n(7111),c=n(9484);class m extends i.W{constructor(){super(...arguments),this._collideTilemap=new s.s}getCollideTilemap(t){return this._collideTilemap=t,this}make(){return this.gameObjectBuilder.withComponent(r.N,(t=>{t.offset=-98})).withComponent(l.F,(t=>{t.chunkSize=15,t.filter.brightness=1.5,t.tileResolutionX=16,t.tileResolutionY=16,o.E.loadImageFromPath(c.Z).then((e=>{if(!t.exists)return;function n(t){return{i:0,a:t}}t.imageSources=[new a.I(e,18,13)];const i={o:()=>n(93),O:()=>n(94),"#":()=>n(61),"@":()=>n(75),$:()=>n(76),"*":()=>n(58),"^":()=>n(59)," ":()=>null};t.drawTileFromTwoDimensionalArray(h.d.map(["              ","   $          ","    #         ","              ","              "],i),-3,4),t.drawTileFromTwoDimensionalArray(h.d.map(["             ","          o  ","         @   ","     #       ","             ","             ","O            "],i),-7,-8)}))})).withComponent(d.n,(t=>{t.chunkSize=15,t.filter.brightness=1.5,t.tileResolutionX=16,t.tileResolutionY=16,o.E.loadImageFromPath(c.Z).then((e=>{if(!t.exists)return;function n(t){return{i:0,a:t}}t.imageSources=[new a.I(e,18,13)];const i={"\u3161":()=>n(47),"\u3163":()=>n(46),"\u3155":()=>n(11),"\u3151":()=>n(29),"\u314f":()=>n(44),"\u3153":()=>n(45),"\u3157":()=>n(62),"\u315c":()=>n(63),"\u3131":()=>n(8),"\u3134":()=>n(26),"\u3132":()=>n(9),"\u3139":()=>n(27),"\u315b":()=>n(28),"\u3160":()=>n(10),"\u3147":()=>null};t.drawTileFromTwoDimensionalArray(h.d.map(["\u3160","\u3134\u3131","\u3147\u314f\u3161\u3161\u3161\u3161\u3161\u3155","\u3147\u315b"],i),-3,4),t.drawTileFromTwoDimensionalArray(h.d.map(["\u3147\u3147\u3147\u3147\u3147\u3147\u3160","\u3147\u3147\u3147\u3147\u3147\u3147\u3163","\u3151\u3161\u3161\u3161\u3161\u3161\u3157\u3161\u315c\u3161\u3161\u3161\u3161\u3161\u3161\u3155","\u3147\u3147\u3147\u3147\u3147\u3147\u3147\u3147\u315b"],i),-8,-1),t.drawTileFromTwoDimensionalArray(h.d.map(["\u3147\u3147\u3147\u3147\u3147\u3160","\u3147\u3147\u3147\u3147\u3147\u3163","\u3147\u3147\u3147\u3147\u3147\u3163","\u3132\u3161\u3161\u3161\u3161\u3139","\u3163\u3147\u3147\u3147\u3147\u3147","\u315b\u3147\u3147\u3147\u3147\u3147"],i),-5,-8),t.drawTileFromTwoDimensionalArray(h.d.map(["\u3160","\u3163","\u3163","\u3163","\u3163","\u315b\u3147\u3147\u3147\u3147\u3147"],i),-5,-15);const s={"^":()=>n(56),"%":()=>n(57),"*":()=>n(72),"&":()=>n(73),"!":()=>n(90),"~":()=>n(91),o:()=>n(74),O:()=>n(92)," ":()=>null};t.drawTileFromTwoDimensionalArray(h.d.map(["     ^","","^ %  ~*"],s),3,4),t.drawTileFromTwoDimensionalArray(h.d.map(["O%    ^"," ^","","^  %"],s),1,-1),t.drawTileFromTwoDimensionalArray(h.d.map(["%     ^"," ","      *~","    % !~","     !**","o   !**~"],s),-2,-8)}))})).getComponent(l.F,this._collideTilemap)}}},1900:(t,e,n)=>{n.d(e,{P:()=>T});var i=n(546),s=n(7888),r=n(251),l=n(5216),o=n(983),a=n(6868),h=n(7111),d=n(9484),c=n(6120);const m={i:0,a:4},u={i:0,a:5},p={i:0,a:7},g={i:0,a:22},w={i:0,a:25},f={i:0,a:40},y={i:0,a:41},b={i:0,a:43};class C{static make(t,e,n,i){const s=Array(e);for(let r=0;r<e;r++){s[r]=Array(t);for(let e=0;e<t;e++)s[r][e]=null}s[0][0]=m;for(let r=1;r<t-1;r++)s[0][r]=u;s[0][t-1]=p;for(let r=1;r<e-1;r++)s[r][0]=g,s[r][t-1]=w;s[e-1][0]=f;for(let r=1;r<t-1;r++)s[e-1][r]=y;return s[e-1][t-1]=b,null!==n&&(s[0][n]=null),null!==i&&(s[e-1][i]=null),s}static computeEntryPosition(t,e,n,i,s){return{top:null!==e?new c.F(i+e,s+t-1):null,bottom:null!==n?new c.F(i+n,s):null}}}class T extends i.W{constructor(){super(...arguments),this._collideTilemap=new s.s}getCollideTilemap(t){return this._collideTilemap=t,this}make(){return this.gameObjectBuilder.withComponent(r.N,(t=>{t.offset=-99})).withComponent(l.F,(t=>{t.chunkSize=15,t.filter.brightness=1.5,t.tileResolutionX=16,t.tileResolutionY=16,o.E.loadImageFromPath(d.Z).then((e=>{if(t.exists){t.imageSources=[new a.I(e,18,13)];for(const e of T._islandList)t.drawTileFromTwoDimensionalArray(C.make(e.width,e.height,e.topEntry,e.bottomEntry),e.x,e.y)}}))})).withComponent(h.n,(t=>{t.chunkSize=15,t.filter.brightness=1.5,t.tileResolutionX=16,t.tileResolutionY=16;o.E.loadImageFromPath(d.Z).then((e=>{if(t.exists){t.imageSources=[new a.I(e,18,13)];for(const e of T._islandList){const n=C.computeEntryPosition(e.height,e.topEntry,e.bottomEntry,e.x,e.y);n.top&&t.drawTile(n.top.x,n.top.y,0,6),n.bottom&&t.drawTile(n.bottom.x,n.bottom.y,0,42)}}}))})).getComponent(l.F,this._collideTilemap)}}T._islandList=[{width:16,height:6,topEntry:1,bottomEntry:2,x:-4,y:3},{width:15,height:8,topEntry:8,bottomEntry:3,x:-8,y:-9}]},125:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>b,contentTitle:()=>f,default:()=>k,frontMatter:()=>w,metadata:()=>y,toc:()=>C});var i=n(7462),s=(n(7294),n(3905)),r=n(5853),l=n(708),o=n(6896),a=n(1269),h=n(6885),d=n(4532),c=n(6327),m=n(2440),u=n(1900);class p extends l.A{run(){const t=this.instantiater;return this.sceneBuilder.withChild(t.buildGameObject("tilemap").withChild(t.buildPrefab("background",c.l,new d.P(0,0,-2)).make()).withChild(t.buildPrefab("islands",u.P,new d.P(0,0,-1)).make())).withChild(t.buildGameObject("camera").withComponent(o.V,(t=>{t.viewSize=4})).withComponent(a.Y,(t=>{t.mouseMoveButton=0,t.maxViewSize=4})).withComponent(h.y,(t=>{t.renderWidth=50,t.renderHeight=50})))}}class g extends l.A{run(){const t=this.instantiater;return this.sceneBuilder.withChild(t.buildGameObject("tilemap").withChild(t.buildPrefab("background",c.l,new d.P(0,0,-3)).make()).withChild(t.buildPrefab("islands",u.P,new d.P(0,0,-2)).make()).withChild(t.buildPrefab("detail",m.Y,new d.P(0,0,-1)).make())).withChild(t.buildGameObject("camera").withComponent(o.V,(t=>{t.viewSize=4})).withComponent(a.Y,(t=>{t.mouseMoveButton=0,t.maxViewSize=4})).withComponent(h.y,(t=>{t.renderWidth=50,t.renderHeight=50})))}}const w={},f="Make Tilemap Layer",y={unversionedId:"tutorial-2dtopdown/make-tilemap-layer",id:"tutorial-2dtopdown/make-tilemap-layer",title:"Make Tilemap Layer",description:"This time, we'll going to make layers by stacking several tile maps.",source:"@site/docs/2-tutorial-2dtopdown/5-make-tilemap-layer.mdx",sourceDirName:"2-tutorial-2dtopdown",slug:"/tutorial-2dtopdown/make-tilemap-layer",permalink:"/the-world-engine.ts/build/docs/tutorial-2dtopdown/make-tilemap-layer",draft:!1,editUrl:"https://github.com/The-World-Space/the-world-engine.ts/tree/main/docs/docusaurus/docs/2-tutorial-2dtopdown/5-make-tilemap-layer.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tilemap Basic",permalink:"/the-world-engine.ts/build/docs/tutorial-2dtopdown/tilemap-basic"},next:{title:"Make Them Into Prefab",permalink:"/the-world-engine.ts/build/docs/tutorial-2dtopdown/make-them-into-prefab"}},b={},C=[{value:"Add Island Layer",id:"add-island-layer",level:2},{value:"Detail Layer",id:"detail-layer",level:2}],T={toc:C};function k(t){let{components:e,...n}=t;return(0,s.kt)("wrapper",(0,i.Z)({},T,n,{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"make-tilemap-layer"},"Make Tilemap Layer"),(0,s.kt)("p",null,"This time, we'll going to make layers by stacking several tile maps.\n",(0,s.kt)("em",{parentName:"p"},"In general, maps that use all tile maps are required to layered.")),(0,s.kt)("h2",{id:"add-island-layer"},"Add Island Layer"),(0,s.kt)("p",null,"We will add one more tile map and overlap it."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/asset/Bootstrapper.ts"',title:'"src/asset/Bootstrapper.ts"'},'.withChild(instantiater.buildGameObject("tilemap")\n    .withChild(instantiater.buildGameObject("background", new Vector3(0, 0, -2))\n        .withComponent(CssTilemapChunkRenderer, c => {\n            //...\n        }))\n\n    .withChild(instantiater.buildGameObject("islands", new Vector3(0, 0, -1))\n        .withComponent(CssTilemapChunkRenderer, c => {\n            c.chunkSize = 15;\n            c.filter.brightness = 1.5;\n            c.tileResolutionX = 16;\n            c.tileResolutionY = 16;\n            AsyncImageLoader.loadImageFromPath(OverworldTileset).then(image => {\n                if (!c.exists) return;\n\n                c.imageSources = [ new TileAtlasItem(image, 18, 13) ];\n\n            });\n        })))\n')),(0,s.kt)("p",null,'Tile maps were parented on a single game object "tilemap" and then added the "islands" layer.'),(0,s.kt)("p",null,"Let us draw an island on the tile map."),(0,s.kt)("p",null,"I'll create a separate function to make it procedural."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/asset/script/MakeIsland.ts"',title:'"src/asset/script/MakeIsland.ts"'},'import { Vector2 } from "three/src/Three";\n\nconst topLeft = { i: 0 as const, a: 4 };\nconst topCenter = { i: 0 as const, a: 5 };\nconst topRight = { i: 0 as const, a: 7};\nconst left = { i: 0 as const, a: 22 };\nconst right = { i: 0 as const, a: 25 };\nconst bottomLeft = { i: 0 as const, a: 40 };\nconst bottomCenter = { i: 0 as const, a: 41 };\nconst bottomRight = { i: 0 as const, a: 43 };\n\nexport class MakeIsland {\n    public static make(\n        width: number,\n        height: number,\n        topEntry: number|null,\n        bottomEntry: number| null\n    ): ({ i: 0; a: number; }|null)[][] {\n        const array2d: ({ i: 0; a: number; }|null)[][] = Array(height);\n        for (let i = 0; i < height; i++) {\n            array2d[i] = Array(width);\n            for (let j = 0; j < width; j++) {\n                array2d[i][j] = null;\n            }\n        }\n\n        array2d[0][0] = topLeft;\n        for (let i = 1; i < width - 1; i++) {\n            array2d[0][i] = topCenter;\n        }\n        array2d[0][width - 1] = topRight;\n        for (let i = 1; i < height - 1; i++) {\n            array2d[i][0] = left;\n            array2d[i][width - 1] = right;\n        }\n        array2d[height - 1][0] = bottomLeft;\n        for (let i = 1; i < width - 1; i++) {\n            array2d[height - 1][i] = bottomCenter;\n        }\n        array2d[height - 1][width - 1] = bottomRight;\n\n        if (topEntry !== null) {\n            array2d[0][topEntry] = null;\n        }\n\n        if (bottomEntry !== null) {\n            array2d[height - 1][bottomEntry] = null;\n        }\n        \n        return array2d;\n    }\n\n    public static computeEntryPosition(\n        height: number,\n        topEntry: number|null,\n        bottomEntry: number| null,\n        x: number,\n        y: number\n    ): { top: Vector2|null, bottom: Vector2|null } {\n        const top = topEntry !== null ? new Vector2(x + topEntry, y + height - 1) : null;\n        const bottom = bottomEntry !== null ? new Vector2(x + bottomEntry, y) : null;\n        return { top, bottom };\n    }\n}\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/asset/Bootstrapper.ts"',title:'"src/asset/Bootstrapper.ts"'},'const islandList = [\n    { width: 16, height: 6, topEntry: 1, bottomEntry: 2, x: -4, y: 3 },\n    { width: 15, height: 8, topEntry: 8, bottomEntry: 3, x: -8, y: -9 }\n];\n\nreturn this.sceneBuilder\n    .withChild(instantiater.buildGameObject("tilemap")\n        .withChild(instantiater.buildGameObject("background", new Vector3(0, 0, -2))\n            .withComponent(CssTilemapChunkRenderer, c => {\n                //...\n            }))\n\n        .withChild(instantiater.buildGameObject("islands", new Vector3(0, 0, -1))\n            .withComponent(CssTilemapChunkRenderer, c => {\n                c.chunkSize = 15;\n                c.filter.brightness = 1.5;\n                c.tileResolutionX = 16;\n                c.tileResolutionY = 16;\n\n                AsyncImageLoader.loadImageFromPath(OverworldTileset).then(image => {\n                    if (!c.exists) return;\n\n                    c.imageSources = [ new TileAtlasItem(image, 18, 13) ];\n\n                    for (const island of islandList) {\n                        c.drawTileFromTwoDimensionalArray(\n                            MakeIsland.make(island.width, island.height, island.topEntry, island.bottomEntry),\n                            island.x, island.y\n                        );\n                    }\n                });\n            })\n            .withComponent(CssTilemapChunkRenderer, c => {\n                c.chunkSize = 15;\n                c.filter.brightness = 1.5;\n                c.tileResolutionX = 16;\n                c.tileResolutionY = 16;\n\n                const topEntry = 6;\n                const bottomEntry = 42;\n\n                AsyncImageLoader.loadImageFromPath(OverworldTileset).then(image => {\n                    if (!c.exists) return;\n\n                    c.imageSources = [ new TileAtlasItem(image, 18, 13) ];\n\n                    for (const island of islandList) {\n                        const entry = MakeIsland.computeEntryPosition(\n                            island.height, island.topEntry, island.bottomEntry, island.x, island.y);\n\n                        if (entry.top) c.drawTile(entry.top.x, entry.top.y, 0, topEntry);\n                        if (entry.bottom) c.drawTile(entry.bottom.x, entry.bottom.y, 0, bottomEntry);\n                    }\n                });\n            })))\n')),(0,s.kt)(r.Z,{bootstrapper:p,mdxType:"DocumentGame"}),(0,s.kt)("p",null,"look at the code, the entry is divided into components and rendered."),(0,s.kt)("p",null,"The reason for rendering the entrance separately is that this is more convenient\nfor later collision processing. We'll learn more about this later."),(0,s.kt)("h2",{id:"detail-layer"},"Detail Layer"),(0,s.kt)("p",null,"we'll going to make another layer and add small details."),(0,s.kt)("p",null,"This is completely simple labor, so you can just paste the code that I'm giving you."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/asset/Bootstrapper.ts"',title:'"src/asset/Bootstrapper.ts"'},'.withChild(instantiater.buildGameObject("background", new Vector3(0, 0, -3))\n    .withComponent(CssTilemapChunkRenderer, c => {\n        //...\n    }))\n\n.withChild(instantiater.buildGameObject("islands", new Vector3(0, 0, -2))\n    .withComponent(CssTilemapChunkRenderer, c => {\n        //...\n    })\n    .withComponent(CssTilemapChunkRenderer, c => {\n        //...\n    }))\n    \n.withChild(instantiater.buildGameObject("detail", new Vector3(0, 0, -1))\n    .withComponent(CssTilemapChunkRenderer, c => {\n        c.chunkSize = 15;\n        c.filter.brightness = 1.5;\n        c.tileResolutionX = 16;\n        c.tileResolutionY = 16;\n\n        AsyncImageLoader.loadImageFromPath(OverworldTileset).then(image => {\n            if (!c.exists) return;\n\n            c.imageSources = [ new TileAtlasItem(image, 18, 13) ];\n\n            function f(a: number): { i: 0; a: number; } {\n                return { i: 0, a: a };\n            }\n\n            const converter = {\n                //rock\n                "o": () => f(93),\n                "O": () => f(94),\n                //sign\n                "#": () => f(61),\n                //stump\n                "@": () => f(75),\n                "$": () => f(76),\n                //bush\n                "*": () => f(58),\n                "^": () => f(59),\n\n                " ": () => null\n            };\n\n            c.drawTileFromTwoDimensionalArray(\n                TwoDimensionalStringMapper.map(\n                    [\n                        "              ",\n                        "   $          ",\n                        "    #         ",\n                        "              ",\n                        "              "\n                    ],\n                    converter\n                ),\n                -3, 4\n            );\n            \n            c.drawTileFromTwoDimensionalArray(\n                TwoDimensionalStringMapper.map(\n                    [\n                        "             ",\n                        "          o  ",\n                        "         @   ",\n                        "     #       ",\n                        "             ",\n                        "             ",\n                        "O            "\n                    ],\n                    converter\n                ),\n                -7, -8\n            );\n        });\n    })\n    .withComponent(CssTilemapChunkRenderer, c => {\n        c.chunkSize = 15;\n        c.filter.brightness = 1.5;\n        c.tileResolutionX = 16;\n        c.tileResolutionY = 16;\n\n        AsyncImageLoader.loadImageFromPath(OverworldTileset).then(image => {\n            if (!c.exists) return;\n\n            c.imageSources = [ new TileAtlasItem(image, 18, 13) ];\n\n            function f(a: number): { i: 0; a: number; } {\n                return { i: 0, a: a };\n            }\n\n            const roadConverter = {\n                "\u3161": () => f(47),\n                "\u3163": () => f(46),\n                "\u3155": () => f(11),\n                "\u3151": () => f(29),\n                "\u314f": () => f(44),\n                "\u3153": () => f(45),\n                "\u3157": () => f(62),\n                "\u315c": () => f(63),\n                "\u3131": () => f(8),\n                "\u3134": () => f(26),\n                "\u3132": () => f(9),\n                "\u3139": () => f(27),\n                "\u315b": () => f(28),\n                "\u3160": () => f(10),\n                "\u3147": () => null\n            };\n\n            c.drawTileFromTwoDimensionalArray(\n                TwoDimensionalStringMapper.map(\n                    [\n                        "\u3160",\n                        "\u3134\u3131",\n                        "\u3147\u314f\u3161\u3161\u3161\u3161\u3161\u3155",\n                        "\u3147\u315b"\n                    ],\n                    roadConverter\n                ),\n                -3, 4\n            );\n\n            c.drawTileFromTwoDimensionalArray(\n                TwoDimensionalStringMapper.map(\n                    [\n                        "\u3147\u3147\u3147\u3147\u3147\u3147\u3160",\n                        "\u3147\u3147\u3147\u3147\u3147\u3147\u3163",\n                        "\u3151\u3161\u3161\u3161\u3161\u3161\u3157\u3161\u315c\u3161\u3161\u3161\u3161\u3161\u3161\u3155",\n                        "\u3147\u3147\u3147\u3147\u3147\u3147\u3147\u3147\u315b"\n                    ],\n                    roadConverter\n                ),\n                -8, -1\n            );\n\n            c.drawTileFromTwoDimensionalArray(\n                TwoDimensionalStringMapper.map(\n                    [\n                        "\u3147\u3147\u3147\u3147\u3147\u3160",\n                        "\u3147\u3147\u3147\u3147\u3147\u3163",\n                        "\u3147\u3147\u3147\u3147\u3147\u3163",\n                        "\u3132\u3161\u3161\u3161\u3161\u3139",\n                        "\u3163\u3147\u3147\u3147\u3147\u3147",\n                        "\u315b\u3147\u3147\u3147\u3147\u3147"\n                    ],\n                    roadConverter\n                ),\n                -5, -8\n            );\n\n            c.drawTileFromTwoDimensionalArray(\n                TwoDimensionalStringMapper.map(\n                    [\n                        "\u3160",\n                        "\u3163",\n                        "\u3163",\n                        "\u3163",\n                        "\u3163",\n                        "\u315b\u3147\u3147\u3147\u3147\u3147"\n                    ],\n                    roadConverter\n                ),\n                -5, -15\n            );\n\n            const foliageConverter = {\n                //grass\n                "^": () => f(56),\n                "%": () => f(57),\n                //flower\n                "*": () => f(72),\n                "&": () => f(73),\n                "!": () => f(90),\n                "~": () => f(91),\n                //rock\n                "o": () => f(74),\n                "O": () => f(92),\n\n                " ": () => null\n            };\n            \n            c.drawTileFromTwoDimensionalArray(\n                TwoDimensionalStringMapper.map(\n                    [\n                        "     ^",\n                        "",\n                        "^ %  ~*"\n                    ],\n                    foliageConverter\n                ),\n                3, 4\n            );\n\n            c.drawTileFromTwoDimensionalArray(\n                TwoDimensionalStringMapper.map(\n                    [\n                        "O%    ^",\n                        " ^",\n                        "",\n                        "^  %"\n                    ],\n                    foliageConverter\n                ),\n                1, -1\n            );\n\n            c.drawTileFromTwoDimensionalArray(\n                TwoDimensionalStringMapper.map(\n                    [\n                        "%     ^",\n                        " ",\n                        "      *~",\n                        "    % !~",\n                        "     !**",\n                        "o   !**~"\n                    ],\n                    foliageConverter\n                ),\n                -2, -8\n            );\n        });\n    }))\n')),(0,s.kt)(r.Z,{bootstrapper:g,mdxType:"DocumentGame"}))}k.isMDXComponent=!0},5216:(t,e,n)=>{n.d(e,{F:()=>d});var i=n(6120),s=n(4532),r=n(3674),l=n(8788),o=n(3379),a=n(6868);class h extends a.N{constructor(){super(...arguments),this.Mn=new Map,this.cn=!1}onEnable(){super.onEnable(),this.cn=!0}onDisable(){super.onDisable(),this.cn=!1}drawTile(t,e,n,i){super.drawTile(t,e,n,i);const s=Math.ceil(t-this.columnCount/2),r=Math.ceil(this.rowCount-e-this.rowCount/2)-1;this.Mn.set(`${s}_${r}`,!0)}drawTileFromTwoDimensionalArray(t,e,n){super.drawTileFromTwoDimensionalArray(t,e,n);for(let i=0;i<t.length;i++)for(let s=0;s<t[i].length;s++)if(null!==t[i][s]){const t=Math.ceil(this.transform.localPosition.x/this.gridCellWidth+(s+e)-this.columnCount/2),r=Math.ceil(this.transform.localPosition.y/this.gridCellHeight+(this.rowCount-(i+n))-this.rowCount/2)-1;this.Mn.set(`${t}_${r}`,!0)}}clearTile(t,e){super.clearTile(t,e);const n=Math.ceil(t-this.columnCount/2),i=Math.ceil(this.rowCount-e-this.rowCount/2)-1;this.Mn.delete(`${n}_${i}`)}addCollider(t,e){const n=Math.ceil(t-this.columnCount/2),i=Math.ceil(this.rowCount-e-this.rowCount/2)-1;this.Mn.set(`${n}_${i}`,!0)}checkCollision(t,e,n,i){if(!this.cn)return!1;const s=this.transform.position;t-=s.x,e-=s.y,this.columnCount%2==0&&(t-=this.gridCellWidth),this.rowCount%2==0&&(e-=this.gridCellHeight),this.rowCount%2==0&&(e+=this.gridCellHeight/2),this.columnCount%2==0&&(t+=this.gridCellWidth/2);const r=Math.floor(t/this.gridCellWidth),l=Math.floor((t+n)/this.gridCellWidth),o=Math.floor(e/this.gridCellHeight),a=Math.floor((e+i)/this.gridCellHeight);for(let h=o;h<=a;h++)for(let t=r;t<=l;t++)if(!0===this.Mn.get(`${t}_${h}`))return!0;return!1}}class d extends r.w{constructor(){super(...arguments),this.Qr=new Map,this.Zr=16,this.sn=1,this.en=1,this.hn=16,this.rn=16,this.nn=1.001,this.on=null,this.ln=!0,this.cn=!1,this.un=.1,this.an=l.r.Pixelated,this.dn=()=>{this.Qr.forEach(((t,e)=>{t.filter.copy(this.Ui)}))},this.Ui=new o.c(this.dn),this.Nr=[],this.Xr=!1}start(){this.Xr=!0;const t=this.Nr;for(let e=0;e<t.length;++e)t[e]();t.length=0}onEnable(){this.cn=!0}onDisable(){this.cn=!1}fn(){this.Qr.forEach(((t,e)=>{const n=this.gn(e)*this.Zr*this.sn,i=this.pn(e)*this.Zr*this.en;t.gameObject.transform.localPosition.set(n,i,0)}))}gn(t){return parseInt(t.substring(0,t.indexOf("_")))}pn(t){return parseInt(t.substring(t.indexOf("_")+1))}mn(t,e){return`${t}_${e}`}Cn(t,e,n,s){const r=n-t*this.Zr+this.Zr/2,l=s-e*this.Zr+this.Zr/2;return new i.F(r,l)}_n(t,e){const n=this.mn(t,e);let i=this.Qr.get(n);return void 0===i&&(this.gameObject.addChildFromBuilder(this.engine.instantiater.buildGameObject(`css_tilemap_renderer_${t}_${e}`,new s.P(t*this.Zr*this.sn,e*this.Zr*this.en,0),void 0,(new s.P).setScalar(this.nn)).withComponent(h,(t=>{i=t,this.on&&(t.imageSources=this.on),t.gridCellWidth=this.sn,t.gridCellHeight=this.en,t.tileResolutionX=this.hn,t.tileResolutionY=this.rn,t.rowCount=this.Zr,t.columnCount=this.Zr,t.pointerEvents=this.ln,t.viewScale=this.un,t.filter.copy(this.Ui)}))),this.Qr.set(n,i)),i}Rn(t,e){const n=this.mn(t,e),i=this.Qr.get(n);return void 0===i?null:i}drawTile(t,e,n,i){if(!this.Xr)return void this.Nr.push((()=>{this.drawTile(t,e,n,i)}));const s=Math.floor((t+this.Zr/2)/this.Zr),r=Math.floor((e+this.Zr/2)/this.Zr),l=this._n(s,r),o=this.Cn(s,r,t,e),a=this.chunkSize%2==0?0:-.5,h=this.chunkSize%2==0?0:.5;l.drawTile(o.x+a,this.Zr-o.y-1+h,n,i)}drawTileFromTwoDimensionalArray(t,e,n){if(this.Xr)for(let i=0;i<t.length;i++)for(let s=0;s<t[i].length;s++)null!==t[i][s]&&this.drawTile(s+e,t.length-i+n-1,t[i][s].i,t[i][s].a);else this.Nr.push((()=>{this.drawTileFromTwoDimensionalArray(t,e,n)}))}clearTile(t,e){if(!this.Xr)return void this.Nr.push((()=>{this.clearTile(t,e)}));const n=Math.floor((t+this.Zr/2)/this.Zr),i=Math.floor((e+this.Zr/2)/this.Zr),s=this.Rn(n,i);if(null===s)return;const r=this.Cn(n,i,t,e),l=this.chunkSize%2==0?0:-.5,o=this.chunkSize%2==0?0:.5;s.clearTile(r.x+l,this.Zr-r.y-1+o)}addCollider(t,e){if(!this.Xr)return void this.Nr.push((()=>{this.addCollider(t,e)}));const n=Math.floor((t+this.Zr/2)/this.Zr),i=Math.floor((e+this.Zr/2)/this.Zr),s=this._n(n,i),r=this.Cn(n,i,t,e),l=this.chunkSize%2==0?0:-.5,o=this.chunkSize%2==0?0:.5;s.addCollider(r.x+l,this.Zr-r.y-1+o)}checkCollision(t,e,n,i){if(!this.cn)return!1;const s=this.transform.position,r=Math.floor(((t-s.x)/this.sn+this.Zr/2)/this.Zr),l=Math.floor(((e-s.y)/this.en+this.Zr/2)/this.Zr),o=this.mn(r,l),a=this.Qr.get(o);return void 0!==a&&a.checkCollision(t,e,n,i)}get chunkSize(){return this.Zr}set chunkSize(t){this.Zr=t,this.fn(),this.Qr.forEach(((t,e)=>{t.rowCount=this.Zr,t.columnCount=this.Zr}))}set imageSources(t){this.Xr?this.on=t:this.Nr.push((()=>{this.imageSources=t}))}get pointerEvents(){return this.ln}set pointerEvents(t){this.ln=t,this.Qr.forEach(((e,n)=>{e.pointerEvents=t}))}get gridCellWidth(){return this.sn}set gridCellWidth(t){this.sn!==t&&(this.sn=t,this.fn(),this.Qr.forEach(((t,e)=>{t.gridCellWidth=this.sn})))}get gridCellHeight(){return this.en}set gridCellHeight(t){this.en!==t&&(this.en=t,this.fn(),this.Qr.forEach(((t,e)=>{t.gridCellHeight=this.en})))}get tileResolutionX(){return this.hn}set tileResolutionX(t){this.hn!==t&&(this.hn=t,this.Qr.forEach(((t,e)=>{t.tileResolutionX=this.hn})))}get tileResolutionY(){return this.rn}set tileResolutionY(t){this.rn!==t&&(this.rn=t,this.Qr.forEach(((t,e)=>{t.tileResolutionY=this.rn})))}get tilemapScale(){return this.nn}set tilemapScale(t){this.nn!==t&&(this.nn=t,this.Qr.forEach(((t,e)=>{t.gameObject.transform.localScale.setScalar(this.nn)})))}get gridCenter(){const t=this.transform.position,e=this.Zr%2==1?0:this.sn/2,n=this.Zr%2==1?0:this.en/2;return new i.F(t.x+e,t.y+n)}get gridCenterX(){const t=this.transform.position,e=this.Zr%2==1?0:this.sn/2;return t.x+e}get gridCenterY(){const t=this.transform.position,e=this.Zr%2==1?0:this.en/2;return t.y+e}get viewScale(){return this.un}set viewScale(t){this.un=t,this.Qr.forEach(((t,e)=>{t.viewScale=this.un}))}get filter(){return this.Ui}get imageRenderingMode(){return this.an}set imageRenderingMode(t){this.an=t,this.Qr.forEach(((e,n)=>{e.imageRenderingMode=t}))}}},6885:(t,e,n)=>{n.d(e,{y:()=>a});var i=n(4532),s=n(3674),r=n(7888),l=n(6896),o=n(1466);class a extends s.w{constructor(){super(...arguments),this.disallowMultipleComponent=!0,this.requiredComponents=[l.V],this.hd=null,this.rd=null,this.Ih=1,this.Th=1,this.nd=18,this.od=10,this.dd=.2,this.ad=0,this.ld=new i.P(NaN,NaN,NaN)}awake(){const t=new r.s;this.rd=this.engine.scene.addChildFromBuilder(this.engine.instantiater.buildGameObject("grid-renderer",void 0,void 0,new i.P(this.dd,this.dd,this.dd)).active(!1).withComponent(o.w,(t=>{const e=document.createElement("div");e.style.backgroundImage="                        repeating-linear-gradient(#999 0 1px, transparent 1px 100%),                        repeating-linear-gradient(90deg, #999 0 1px, transparent 1px 100%)",e.style.backgroundSize=this.Ih/this.dd/.1+"px "+this.Th/this.dd/.1+"px",t.elementWidth=this.nd/this.dd,t.elementHeight=this.od/this.dd,t.pointerEvents=!1,t.element=e,t.viewScale=.1})).getComponent(o.w,t)),this.hd=t.ref}onEnable(){this.rd.exists&&(this.rd.activeSelf=!0)}onDisable(){this.rd.exists&&(this.rd.activeSelf=!1)}update(){const t=this.transform.position,e=1/this.dd/.1,n=this.nd*e/2,i=this.od*e/2,s=this.Ih*e,r=this.Th*e,l=n%s,o=i%r;if(!t.equals(this.ld)){const n=this.rd.transform.position;n.copy(t),n.z+=this.ad,this.hd.element.style.backgroundPosition=-t.x*e+l+s/2-.5+"px "+(t.y*e+o+r/2-.5)+"px"}}onDestroy(){var t;null===(t=this.rd)||void 0===t||t.destroy()}fd(){const t=this.hd;t&&(t.element.style.backgroundSize=this.Ih/this.dd/.1+"px "+this.Th/this.dd/.1+"px")}get gridCellWidth(){return this.Ih}set gridCellWidth(t){this.Ih=t,this.fd()}get gridCellHeight(){return this.Th}set gridCellHeight(t){this.Th=t,this.fd()}get renderWidth(){return this.nd}set renderWidth(t){this.nd=t,this.hd&&(this.hd.elementWidth=this.nd/this.dd)}get renderHeight(){return this.od}set renderHeight(t){this.od=t,this.hd&&(this.hd.elementHeight=this.od/this.dd)}get lineWidth(){return.1*this.dd}set lineWidth(t){this.dd=t/.1;const e=this.hd;e&&(this.fd(),e.elementWidth=this.nd/this.dd,e.elementHeight=this.od/this.dd,e.gameObject.transform.localScale.setScalar(this.dd))}get zOffset(){return this.ad}set zOffset(t){this.ad=t}}},1466:(t,e,n)=>{n.d(e,{w:()=>r});var i=n(4627),s=n(6924);class r extends s.Y{constructor(){super(...arguments),this.tu=1,this.su=1,this.iu=!1,this.Ca=null}renderInitialize(){var t;null===(t=this.Ca)||void 0===t||t.call(this),this.htmlElement||(this.element=null)}updateCenterOffset(t){if(!this.css3DObject)return;let e,n;if(this.iu)if(this.css3DObject.element.parentElement){const t=this.css3DObject.element.style.display;this.css3DObject.element.style.display="",e=this.css3DObject.element.offsetWidth*this.viewScale,n=this.css3DObject.element.offsetHeight*this.viewScale,this.css3DObject.element.style.display=t}else{const t=this.css3DObject.element.style.display;this.css3DObject.element.style.display="";const i=this.css3DObject.element.style.transform;this.css3DObject.element.style.transform="translateX(1000000px)",document.body.appendChild(this.css3DObject.element),e=this.css3DObject.element.offsetWidth*this.viewScale,n=this.css3DObject.element.offsetHeight*this.viewScale,this.css3DObject.element.style.display=t,this.css3DObject.element.style.transform=i,document.body.removeChild(this.css3DObject.element)}else e=this.tu,n=this.su;this.css3DObject.position.set(e*this.centerOffset.x,n*this.centerOffset.y,0),t&&(i.w.updateRawObject3DWorldMatrixRecursively(this.css3DObject),this.transform.enqueueRenderAttachedObject3D(this.css3DObject))}updateViewScale(t){if(!this.css3DObject)return;const e=this.viewScale;this.iu?(this.css3DObject.scale.set(e,e,e),this.updateCenterOffset(!1)):(this.css3DObject.element.style.width=this.tu/this.viewScale+"px",this.css3DObject.element.style.height=this.su/this.viewScale+"px",this.css3DObject.scale.set(e,e,e)),t&&(i.w.updateRawObject3DWorldMatrixRecursively(this.css3DObject),this.transform.enqueueRenderAttachedObject3D(this.css3DObject))}get element(){return this.htmlElement}set element(t){const e=this.htmlElement=null!=t?t:document.createElement("div");this.readyToDraw?this.hu(e):this.Ca=()=>this.hu(e)}hu(t){this.iu?(t.style.width="auto",t.style.height="auto"):(t.style.width=this.tu/this.viewScale+"px",t.style.height=this.su/this.viewScale+"px");const e=this.initializeBaseComponents(!0);i.w.updateRawObject3DWorldMatrixRecursively(e),this.transform.enqueueRenderAttachedObject3D(e)}get elementWidth(){if(this.iu){if(this.htmlElement){const t=this.htmlElement.style.display;this.htmlElement.style.display="";const e=this.htmlElement.offsetWidth*this.viewScale;return this.htmlElement.style.display=t,e}return 0}return this.tu}set elementWidth(t){this.iu||(this.tu=t,this.htmlElement&&(this.htmlElement.style.width=t/this.viewScale+"px"),this.updateCenterOffset(!0))}get elementHeight(){if(this.iu){if(this.htmlElement){const t=this.htmlElement.style.display;this.htmlElement.style.display="";const e=this.htmlElement.offsetHeight*this.viewScale;return this.htmlElement.style.display=t,e}return 0}return this.su}set elementHeight(t){this.iu||(this.su=t,this.htmlElement&&(this.htmlElement.style.height=t/this.viewScale+"px"),this.updateCenterOffset(!0))}get autoSize(){return this.iu}set autoSize(t){this.iu=t,this.htmlElement&&(t?(this.htmlElement.style.width="auto",this.htmlElement.style.height="auto"):(this.htmlElement.style.width=this.tu/this.viewScale+"px",this.htmlElement.style.height=this.su/this.viewScale+"px"))}}},9484:(t,e,n)=>{n.d(e,{Z:()=>i});const i=n.p+"assets/images/Overworld_Tileset-1c44075b314e79caada3455aa25f5809.png"}}]);