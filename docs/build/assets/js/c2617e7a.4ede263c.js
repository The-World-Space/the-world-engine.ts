"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[33],{6327:(e,t,i)=>{i.d(t,{l:()=>h});var s=i(546),n=i(251),a=i(7111),l=i(983),r=i(6868),o=i(9484);class h extends s.W{constructor(){super(...arguments),this._planeSize=null}withPlaneSize(e){return this._planeSize=e,this}make(){return this.gameObjectBuilder.withComponent(n.N,(e=>{e.offset=-100})).withComponent(a.n,(e=>{e.chunkSize=15,e.filter.brightness=1.5,e.tileResolutionX=16,e.tileResolutionY=16,l.E.loadImageFromPath(o.Z).then((t=>{var i,s;if(!e.exists)return;e.imageSources=[new r.I(t,18,13)];const n={i:0,a:24},a=null!=(i=null==(s=this._planeSize)?void 0:s.ref)?i:51,l=[];for(let e=0;e<a;e++){l[e]=[];for(let t=0;t<a;t++)l[e][t]=n}const o=Math.floor(a/2);e.drawTileFromTwoDimensionalArray(l,-o,-o)}))}))}}},3290:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>T,contentTitle:()=>v,default:()=>N,frontMatter:()=>C,metadata:()=>S,toc:()=>x});var s=i(7462),n=(i(7294),i(3905)),a=i(5853),l=i(708),r=i(7111),o=i(983),h=i(6868),d=i(6896),m=i(1269),c=i(6885),u=i(291),p=i(4532),g=i(9484),w=i(6327);class k extends l.A{run(){const e=this.instantiater;return this.sceneBuilder.withChild(e.buildGameObject("background",new p.P(0,0,-1)).withComponent(r.n,(e=>{e.chunkSize=15,e.tileResolutionX=16,e.tileResolutionY=16,o.E.loadImageFromPath(g.Z).then((t=>{e.exists&&(e.imageSources=[new h.I(t,18,13)],e.drawTile(0,0,0,24))}))}))).withChild(e.buildGameObject("camera").withComponent(d.V,(e=>{e.viewSize=4})).withComponent(m.Y,(e=>{e.mouseMoveButton=0,e.maxViewSize=4})).withComponent(c.y,(e=>{e.renderWidth=50,e.renderHeight=50})))}}class f extends l.A{run(){const e=this.instantiater;return this.sceneBuilder.withChild(e.buildGameObject("background",new p.P(0,0,-1)).withComponent(r.n,(e=>{e.chunkSize=15,e.tileResolutionX=16,e.tileResolutionY=16,o.E.loadImageFromPath(g.Z).then((t=>{e.exists&&(e.imageSources=[new h.I(t,18,13)],e.drawTileFromTwoDimensionalArray(u.d.map(["gggg","gggg","gggg","gggg"],{g:()=>({i:0,a:24})}),0,0))}))}))).withChild(e.buildGameObject("camera").withComponent(d.V,(e=>{e.viewSize=4})).withComponent(m.Y,(e=>{e.mouseMoveButton=0,e.maxViewSize=4})).withComponent(c.y,(e=>{e.renderWidth=50,e.renderHeight=50})))}}class b extends l.A{run(){const e=this.instantiater;return this.sceneBuilder.withChild(e.buildGameObject("background",new p.P(0,0,-1)).withComponent(r.n,(e=>{e.chunkSize=15,e.tileResolutionX=16,e.tileResolutionY=16,o.E.loadImageFromPath(g.Z).then((t=>{if(!e.exists)return;e.imageSources=[new h.I(t,18,13)];const i={i:0,a:24},s=[];for(let e=0;e<51;e++){s[e]=[];for(let t=0;t<51;t++)s[e][t]=i}const n=Math.floor(25.5);e.drawTileFromTwoDimensionalArray(s,-n,-n)}))}))).withChild(e.buildGameObject("camera").withComponent(d.V,(e=>{e.viewSize=4})).withComponent(m.Y,(e=>{e.mouseMoveButton=0,e.maxViewSize=4})).withComponent(c.y,(e=>{e.renderWidth=50,e.renderHeight=50})))}}class y extends l.A{run(){const e=this.instantiater;return this.sceneBuilder.withChild(e.buildPrefab("background",w.l,new p.P(0,0,-1)).make()).withChild(e.buildGameObject("camera").withComponent(d.V,(e=>{e.viewSize=4})).withComponent(m.Y,(e=>{e.mouseMoveButton=0,e.maxViewSize=4})).withComponent(c.y,(e=>{e.renderWidth=50,e.renderHeight=50})))}}const C={},v="Tilemap Basic",S={unversionedId:"tutorial-2dtopdown/tilemap-basic",id:"tutorial-2dtopdown/tilemap-basic",title:"Tilemap Basic",description:"Let's find out the basic way to use the built-in engine component tilemap",source:"@site/docs/2-tutorial-2dtopdown/4-tilemap-basic.mdx",sourceDirName:"2-tutorial-2dtopdown",slug:"/tutorial-2dtopdown/tilemap-basic",permalink:"/the-world-engine.ts/build/docs/tutorial-2dtopdown/tilemap-basic",draft:!1,editUrl:"https://github.com/The-World-Space/the-world-engine.ts/tree/main/docs/docusaurus/docs/2-tutorial-2dtopdown/4-tilemap-basic.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Sprite Atlas Setup",permalink:"/the-world-engine.ts/build/docs/tutorial-2dtopdown/sprite-atlas-setup"},next:{title:"Make Tilemap Layer",permalink:"/the-world-engine.ts/build/docs/tutorial-2dtopdown/make-tilemap-layer"}},T={},x=[{value:"Kind of Tilemap",id:"kind-of-tilemap",level:2},{value:"Usage of <code>CssTilemapChunkRenderer</code>",id:"usage-of-csstilemapchunkrenderer",level:2},{value:"Draw Tile From Two Dimensional Array",id:"draw-tile-from-two-dimensional-array",level:2},{value:"Mapping from String Array",id:"mapping-from-string-array",level:3},{value:"Make Grass Background",id:"make-grass-background",level:2}],O={toc:x};function N(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,s.Z)({},O,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"tilemap-basic"},"Tilemap Basic"),(0,n.kt)("p",null,"Let's find out the basic way to use the built-in engine component tilemap"),(0,n.kt)("h2",{id:"kind-of-tilemap"},"Kind of Tilemap"),(0,n.kt)("p",null,"Currently, four types of tile maps are provided as standard:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"CssTilemapRenderer")," - It's the most basic form of tilemap. You are ",(0,n.kt)("strong",{parentName:"li"},"limited in size")," and can draw tiles from a given tile set."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"CssTilemapChunkRenderer")," - As a wrapper of the ",(0,n.kt)("inlineCode",{parentName:"li"},"CssTilemapRenderer"),", it is a tilemap of ",(0,n.kt)("strong",{parentName:"li"},"infinite size"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"CssCollideTilemapRenderer")," - It is a tilemap that ",(0,n.kt)("strong",{parentName:"li"},"contains a grid collide map"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"CssCollideTilemapChunkRenderer")," - As a wrapper of the ",(0,n.kt)("inlineCode",{parentName:"li"},"CssCollideTilemapRenderer"),", it has ",(0,n.kt)("strong",{parentName:"li"},"infinite size"),".")),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"grid collide maps are used for collision handling in grid-based games. We'll talk about this later.")),(0,n.kt)("h2",{id:"usage-of-csstilemapchunkrenderer"},"Usage of ",(0,n.kt)("inlineCode",{parentName:"h2"},"CssTilemapChunkRenderer")),(0,n.kt)("p",null,"First, let's use the CssTilemapChunkRender to draw background tiles."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/asset/Bootstrapper.ts"',title:'"src/asset/Bootstrapper.ts"'},'return this.sceneBuilder\n    .withChild(instantiater.buildGameObject("background", new Vector3(0, 0, -1))\n        .withComponent(CssTilemapChunkRenderer, c => {\n            c.chunkSize = 15;\n            c.tileResolutionX = 16;\n            c.tileResolutionY = 16;\n\n            AsyncImageLoader.loadImageFromPath(OverworldTileset).then(image => {\n                if (!c.exists) return;\n\n                c.imageSources = [ new TileAtlasItem(image, 18, 13) ];\n                c.drawTile(0, 0, 0, 24);\n            });\n        }))\n\n    .withChild(instantiater.buildGameObject("camera")\n        .withComponent(Camera, c => {\n            c.viewSize = 4;\n        })\n        .withComponent(EditorCameraController, c => {\n            c.mouseMoveButton = 0;\n        })\n        .withComponent(EditorGridRenderer, c => {\n            c.renderWidth = 50;\n            c.renderHeight = 50;\n        }))\n;\n')),(0,n.kt)(a.Z,{bootstrapper:k,ignoreEvents:!0,mdxType:"DocumentGame"}),(0,n.kt)("p",null,"Let's look at the code line by line."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"c.chunkSize = 15;\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"First, I'm specifying the chunk size.\nThis is because if the chunk size is even,\nthe center of the tilemap coordinate system is (0.5, 0.5) and if it's odd,\nit's (0, 0), so we put an odd value in order to make the coordinate system (0, 0).\nThe default chunk size is 16, which is odd.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"c.tileResolutionX = 16;\nc.tileResolutionY = 16;\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Next, the tileResolution value is specified.\nIt is recommended that the resolution of the tile map renderer be\naccurate to the resolution of the tile. In this case, the resolution of the tile is 16x16,\nso we set it to 16.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"AsyncImageLoader.loadImageFromPath(OverworldTileset).then(image => {\n    if (!c.exists) return;\n\n    //...\n});\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"then loading the image using AsyncImageLoader.\nAsyncImageLoader is just a Promise Wrapper for an onLoad callback.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"c.exists is the code to determine if a component exists,\nand it is recommended that you check the existence for all asynchronous job callbacks\nbecause the component may have been destroyed by another element after the asynchronous operation.\n",(0,n.kt)("em",{parentName:"p"},"(For example, the most frequent problem is that if the player unmounts the game while loading the game, the component will no longer exist at the time of asynchronous callback.)")))),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"c.imageSources = [ new TileAtlasItem(image, 18, 13) ];\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Then you have to specify the sprite Atlas to use in Renderer.\n18 and 13 are column count and row count")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript"},"c.drawTile(0, 0, 0, 24);\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Finally, you can draw a tile.\nThe first two numbers are x, y values to draw tiles,\nfollowed by the index of the c.imageSources array,\nand the last is the index value of the sprite Atlas.\nOverworld Tileset's 24th tile is a grass tile.")),(0,n.kt)("h2",{id:"draw-tile-from-two-dimensional-array"},"Draw Tile From Two Dimensional Array"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/asset/Bootstrapper.ts"',title:'"src/asset/Bootstrapper.ts"'},"const g = { i: 0 as const, a: 24 };\n    \nc.drawTileFromTwoDimensionalArray(\n    [\n        [g, g, g, g],\n        [g, g, g, g],\n        [g, g, g, g],\n        [g, g, g, g]\n    ],\n    0, 0\n);\n")),(0,n.kt)(a.Z,{bootstrapper:f,ignoreEvents:!0,mdxType:"DocumentGame"}),(0,n.kt)("p",null,"You can also draw tiles through a two-dimensional array."),(0,n.kt)("p",null,"The items in the array type is ",(0,n.kt)("inlineCode",{parentName:"p"},"{ i: number, a: number }"),".\nwhere i stands for the index of c.imageSources and a stands for the index of Sprite Atlas."),(0,n.kt)("p",null,"The last parameter 0, 0 is the center coordinate to draw the tile.\nThe center coordinates span the left corner of the two-dimensional array"),(0,n.kt)("h3",{id:"mapping-from-string-array"},"Mapping from String Array"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/asset/Bootstrapper.ts"',title:'"src/asset/Bootstrapper.ts"'},'c.drawTileFromTwoDimensionalArray(\n    TwoDimensionalStringMapper.map([\n        "gggg",\n        "gggg",\n        "gggg",\n        "gggg"\n    ], {\n        "g": () => ({ i: 0, a: 24 }),\n    }),\n    0, 0\n);\n')),(0,n.kt)("p",null,"Code for obtaining the same result as above.\nIt can be viewed in a more readable form by mapping through strings."),(0,n.kt)("p",null,"In future tutorials, we will use string mapping to design levels."),(0,n.kt)("h2",{id:"make-grass-background"},"Make Grass Background"),(0,n.kt)("p",null,"Now let's make a lawn."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/asset/Bootstrapper.ts"',title:'"src/asset/Bootstrapper.ts"'},'.withChild(instantiater.buildGameObject("background", new Vector3(0, 0, -1))\n    .withComponent(CssTilemapChunkRenderer, c => {\n        c.chunkSize = 15;\n        c.tileResolutionX = 16;\n        c.tileResolutionY = 16;\n\n        AsyncImageLoader.loadImageFromPath(OverworldTileset).then(image => {\n            if (!c.exists) return;\n\n            c.imageSources = [ new TileAtlasItem(image, 18, 13) ];\n\n            const grass = { i: 0 as const, a: 24 };\n            const planeSize = 51;\n\n            const array2d: { i: 0; a: number; }[][] = [];\n            for (let i = 0; i < planeSize; i++) {\n                array2d[i] = [];\n                for (let j = 0; j < planeSize; j++) {\n                    array2d[i][j] = grass;\n                }\n            }\n\n            const planeSizeHalf = Math.floor(planeSize / 2);\n\n            c.drawTileFromTwoDimensionalArray(\n                array2d,\n                -planeSizeHalf, -planeSizeHalf\n            );\n        });\n    }))\n')),(0,n.kt)("p",null,"We'll use a loop because it's a simple iteration."),(0,n.kt)(a.Z,{bootstrapper:b,ignoreEvents:!0,mdxType:"DocumentGame"}),(0,n.kt)("p",null,"There is a lawn, but I think it's too dark. In fact, the asset we use is a little dark in color."),(0,n.kt)("p",null,"Let's use the css filter to make it brighter."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/asset/Bootstrapper.ts"',title:'"src/asset/Bootstrapper.ts"'},".withComponent(CssTilemapChunkRenderer, c => {\n    c.filter.brightness = 1.5;\n    //...\n})\n")),(0,n.kt)(a.Z,{bootstrapper:y,ignoreEvents:!0,mdxType:"DocumentGame"}),(0,n.kt)("p",null,"I think it's better now"))}N.isMDXComponent=!0},6885:(e,t,i)=>{i.d(t,{y:()=>o});var s=i(4532),n=i(3674),a=i(7888),l=i(6896),r=i(1466);class o extends n.w{constructor(){super(...arguments),this.disallowMultipleComponent=!0,this.requiredComponents=[l.V],this.hd=null,this.rd=null,this.Ih=1,this.Th=1,this.nd=18,this.od=10,this.dd=.2,this.ad=0,this.ld=new s.P(NaN,NaN,NaN)}awake(){const e=new a.s;this.rd=this.engine.scene.addChildFromBuilder(this.engine.instantiater.buildGameObject("grid-renderer",void 0,void 0,new s.P(this.dd,this.dd,this.dd)).active(!1).withComponent(r.w,(e=>{const t=document.createElement("div");t.style.backgroundImage="                        repeating-linear-gradient(#999 0 1px, transparent 1px 100%),                        repeating-linear-gradient(90deg, #999 0 1px, transparent 1px 100%)",t.style.backgroundSize=this.Ih/this.dd/.1+"px "+this.Th/this.dd/.1+"px",e.elementWidth=this.nd/this.dd,e.elementHeight=this.od/this.dd,e.pointerEvents=!1,e.element=t,e.viewScale=.1})).getComponent(r.w,e)),this.hd=e.ref}onEnable(){this.rd.exists&&(this.rd.activeSelf=!0)}onDisable(){this.rd.exists&&(this.rd.activeSelf=!1)}update(){const e=this.transform.position,t=1/this.dd/.1,i=this.nd*t/2,s=this.od*t/2,n=this.Ih*t,a=this.Th*t,l=i%n,r=s%a;if(!e.equals(this.ld)){const i=this.rd.transform.position;i.copy(e),i.z+=this.ad,this.hd.element.style.backgroundPosition=-e.x*t+l+n/2-.5+"px "+(e.y*t+r+a/2-.5)+"px"}}onDestroy(){var e;null===(e=this.rd)||void 0===e||e.destroy()}fd(){const e=this.hd;e&&(e.element.style.backgroundSize=this.Ih/this.dd/.1+"px "+this.Th/this.dd/.1+"px")}get gridCellWidth(){return this.Ih}set gridCellWidth(e){this.Ih=e,this.fd()}get gridCellHeight(){return this.Th}set gridCellHeight(e){this.Th=e,this.fd()}get renderWidth(){return this.nd}set renderWidth(e){this.nd=e,this.hd&&(this.hd.elementWidth=this.nd/this.dd)}get renderHeight(){return this.od}set renderHeight(e){this.od=e,this.hd&&(this.hd.elementHeight=this.od/this.dd)}get lineWidth(){return.1*this.dd}set lineWidth(e){this.dd=e/.1;const t=this.hd;t&&(this.fd(),t.elementWidth=this.nd/this.dd,t.elementHeight=this.od/this.dd,t.gameObject.transform.localScale.setScalar(this.dd))}get zOffset(){return this.ad}set zOffset(e){this.ad=e}}},1466:(e,t,i)=>{i.d(t,{w:()=>a});var s=i(4627),n=i(6924);class a extends n.Y{constructor(){super(...arguments),this.tu=1,this.su=1,this.iu=!1,this.Ca=null}renderInitialize(){var e;null===(e=this.Ca)||void 0===e||e.call(this),this.htmlElement||(this.element=null)}updateCenterOffset(e){if(!this.css3DObject)return;let t,i;if(this.iu)if(this.css3DObject.element.parentElement){const e=this.css3DObject.element.style.display;this.css3DObject.element.style.display="",t=this.css3DObject.element.offsetWidth*this.viewScale,i=this.css3DObject.element.offsetHeight*this.viewScale,this.css3DObject.element.style.display=e}else{const e=this.css3DObject.element.style.display;this.css3DObject.element.style.display="";const s=this.css3DObject.element.style.transform;this.css3DObject.element.style.transform="translateX(1000000px)",document.body.appendChild(this.css3DObject.element),t=this.css3DObject.element.offsetWidth*this.viewScale,i=this.css3DObject.element.offsetHeight*this.viewScale,this.css3DObject.element.style.display=e,this.css3DObject.element.style.transform=s,document.body.removeChild(this.css3DObject.element)}else t=this.tu,i=this.su;this.css3DObject.position.set(t*this.centerOffset.x,i*this.centerOffset.y,0),e&&(s.w.updateRawObject3DWorldMatrixRecursively(this.css3DObject),this.transform.enqueueRenderAttachedObject3D(this.css3DObject))}updateViewScale(e){if(!this.css3DObject)return;const t=this.viewScale;this.iu?(this.css3DObject.scale.set(t,t,t),this.updateCenterOffset(!1)):(this.css3DObject.element.style.width=this.tu/this.viewScale+"px",this.css3DObject.element.style.height=this.su/this.viewScale+"px",this.css3DObject.scale.set(t,t,t)),e&&(s.w.updateRawObject3DWorldMatrixRecursively(this.css3DObject),this.transform.enqueueRenderAttachedObject3D(this.css3DObject))}get element(){return this.htmlElement}set element(e){const t=this.htmlElement=null!=e?e:document.createElement("div");this.readyToDraw?this.hu(t):this.Ca=()=>this.hu(t)}hu(e){this.iu?(e.style.width="auto",e.style.height="auto"):(e.style.width=this.tu/this.viewScale+"px",e.style.height=this.su/this.viewScale+"px");const t=this.initializeBaseComponents(!0);s.w.updateRawObject3DWorldMatrixRecursively(t),this.transform.enqueueRenderAttachedObject3D(t)}get elementWidth(){if(this.iu){if(this.htmlElement){const e=this.htmlElement.style.display;this.htmlElement.style.display="";const t=this.htmlElement.offsetWidth*this.viewScale;return this.htmlElement.style.display=e,t}return 0}return this.tu}set elementWidth(e){this.iu||(this.tu=e,this.htmlElement&&(this.htmlElement.style.width=e/this.viewScale+"px"),this.updateCenterOffset(!0))}get elementHeight(){if(this.iu){if(this.htmlElement){const e=this.htmlElement.style.display;this.htmlElement.style.display="";const t=this.htmlElement.offsetHeight*this.viewScale;return this.htmlElement.style.display=e,t}return 0}return this.su}set elementHeight(e){this.iu||(this.su=e,this.htmlElement&&(this.htmlElement.style.height=e/this.viewScale+"px"),this.updateCenterOffset(!0))}get autoSize(){return this.iu}set autoSize(e){this.iu=e,this.htmlElement&&(e?(this.htmlElement.style.width="auto",this.htmlElement.style.height="auto"):(this.htmlElement.style.width=this.tu/this.viewScale+"px",this.htmlElement.style.height=this.su/this.viewScale+"px"))}}},9484:(e,t,i)=>{i.d(t,{Z:()=>s});const s=i.p+"assets/images/Overworld_Tileset-1c44075b314e79caada3455aa25f5809.png"}}]);