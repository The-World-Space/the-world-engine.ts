"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[666],{9596:(e,t,n)=>{n.d(t,{X:()=>l});var i=n(3674),a=n(2441),s=n(9760),r=n(6120),o=n(4532);class l extends i.w{constructor(){super(...arguments),this.column=18,this.row=13}awake(){for(let e=0;e<this.row;e++)for(let t=0;t<this.column;t++)this.spawnText(new r.F(t+.5,this.row-1-e),e*this.column+t)}spawnText(e,t){this.engine.scene.addChildFromBuilder(this.engine.instantiater.buildGameObject("text",new o.P(e.x,e.y,10)).withComponent(a.Km,(e=>{e.text=t.toString(),e.textColor=new s.I(0,0,0),e.viewScale=.05})))}}},5093:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>S,contentTitle:()=>v,default:()=>O,frontMatter:()=>C,metadata:()=>x,toc:()=>f});var i=n(7462),a=(n(7294),n(3905)),s=n(9017),r=n(708),o=n(4483),l=n(6896),d=n(1269),p=n(6885),h=n(8788),c=n(4532),m=n(6120),u=n(9484),w=n(9596);class g extends r.A{run(){const e=this.instantiater;return this.sceneBuilder.withChild(e.buildGameObject("test-sprite-atlas").withComponent(o.$,(e=>{e.asyncSetImageFromPath(u.Z,18,13),e.imageWidth=1,e.imageHeight=1,e.viewScale=1}))).withChild(e.buildGameObject("camera").withComponent(l.V,(e=>{e.viewSize=1})).withComponent(d.Y,(e=>{e.mouseMoveButton=0})).withComponent(p.y,(e=>{e.renderWidth=50,e.renderHeight=50})))}}class k extends r.A{run(){const e=this.instantiater;return this.sceneBuilder.withChild(e.buildGameObject("test-sprite-atlas").active(!1).withComponent(o.$,(e=>{e.asyncSetImageFromPath(u.Z,18,13),e.imageWidth=1,e.imageHeight=1,e.viewScale=1}))).withChild(e.buildGameObject("draw-index").withComponent(w.X)).withChild(e.buildGameObject("camera").withComponent(l.V,(e=>{e.viewSize=4})).withComponent(d.Y,(e=>{e.mouseMoveButton=0,e.maxViewSize=4})).withComponent(p.y,(e=>{e.renderWidth=50,e.renderHeight=50})))}}class b extends r.A{run(){const e=this.instantiater;return this.sceneBuilder.withChild(e.buildGameObject("test-sprite-atlas").active(!1).withComponent(o.$,(e=>{e.asyncSetImageFromPath(u.Z,18,13),e.imageWidth=1,e.imageHeight=1,e.viewScale=1}))).withChild(e.buildGameObject("draw-index").withComponent(w.X)).withChild(e.buildGameObject("overworld-tileset",new c.P(-.5,-.5,0)).withComponent(h._,(e=>{e.asyncSetImageFromPath(u.Z),e.centerOffset=new m.F(.5,.5),e.imageWidth=18,e.imageHeight=13}))).withChild(e.buildGameObject("camera").withComponent(l.V,(e=>{e.viewSize=4})).withComponent(d.Y,(e=>{e.mouseMoveButton=0,e.maxViewSize=4})).withComponent(p.y,(e=>{e.renderWidth=50,e.renderHeight=50})))}}const C={},v="Sprite Atlas Setup",x={unversionedId:"tutorial-2dtopdown/sprite-atlas-setup",id:"tutorial-2dtopdown/sprite-atlas-setup",title:"Sprite Atlas Setup",description:"Sprite Atlas can be used right away to reduce the load time of the game and make the game easier to manage.",source:"@site/docs/2-tutorial-2dtopdown/3-sprite-atlas-setup.mdx",sourceDirName:"2-tutorial-2dtopdown",slug:"/tutorial-2dtopdown/sprite-atlas-setup",permalink:"/the-world-engine.ts/build/docs/tutorial-2dtopdown/sprite-atlas-setup",draft:!1,editUrl:"https://github.com/The-World-Space/the-world-engine.ts/tree/main/docs/docusaurus/docs/2-tutorial-2dtopdown/3-sprite-atlas-setup.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Editor Setup",permalink:"/the-world-engine.ts/build/docs/tutorial-2dtopdown/editor-setup"},next:{title:"Tilemap Basic",permalink:"/the-world-engine.ts/build/docs/tutorial-2dtopdown/tilemap-basic"}},S={},f=[{value:"Donload Sprite Atlas",id:"donload-sprite-atlas",level:2},{value:"Indexing Sprite Atlas",id:"indexing-sprite-atlas",level:2},{value:"Use <code>CssSpriteAtlasRenderer</code>",id:"use-cssspriteatlasrenderer",level:3},{value:"Draw ImageIndex",id:"draw-imageindex",level:3}],y={toc:f};function O(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,i.Z)({},y,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sprite-atlas-setup"},"Sprite Atlas Setup"),(0,a.kt)("p",null,"Sprite Atlas can be used right away to reduce the load time of the game and make the game easier to manage."),(0,a.kt)("p",null,"we will download Sprite Atlas and prepare for use."),(0,a.kt)("h2",{id:"donload-sprite-atlas"},"Donload Sprite Atlas"),(0,a.kt)("p",null,"First, ",(0,a.kt)("strong",{parentName:"p"},"download the game assets")," that we will use. "),(0,a.kt)("p",null,"We're going to use the ",(0,a.kt)("a",{parentName:"p",href:"https://o-lobster.itch.io/adventure-pack"},"TOP-DOWN Adventure Pack")," But there's a slight flaw in the original,\nso We'll use the revised version"),(0,a.kt)("p",null,"you can ",(0,a.kt)("strong",{parentName:"p"},"download")," the revised version from the\n",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("a",{parentName:"strong",href:"https://download-directory.github.io/?url=https%3A%2F%2Fgithub.com%2FThe-World-Space%2Fthe-world-engine-examples%2Ftree%2Fmain%2Ftopdown2d%2Fsrc%2Fasset%2Fimage"},"here")),"."),(0,a.kt)("p",null,"put the contents of the downloaded folder into the src/asset/image of the project."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Overworld_Tileset.png",src:n(6426).Z,width:"288",height:"208"})),(0,a.kt)("p",null,"We will try level design using ",(0,a.kt)("inlineCode",{parentName:"p"},"Overworld_Tileset.png")," among the downloaded files."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Char_Sprites/char_spritesheet.png",src:n(564).Z,width:"416",height:"368"})),(0,a.kt)("p",null,"And we will make a player with ",(0,a.kt)("inlineCode",{parentName:"p"},"Char_Sprites/char_spritesheet.png"),"."),(0,a.kt)("h2",{id:"indexing-sprite-atlas"},"Indexing Sprite Atlas"),(0,a.kt)("p",null,"Like the picture above, the image made by combining various images is called Sprite Atlas."),(0,a.kt)("p",null,"We're going to cut and use only the parts we want over there."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"The following considerations should be taken")," to properly cut the image:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"row count and column count of the image"),(0,a.kt)("li",{parentName:"ul"},"image should not have inconsistent size"),(0,a.kt)("li",{parentName:"ul"},"image should not have inconsistent padding"),(0,a.kt)("li",{parentName:"ul"},"you must know the index of the image you want to use")),(0,a.kt)("p",null,"For example, ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"Overworld_Tileset")," image has row count of 13 and column count of 18"),"."),(0,a.kt)("p",null,"Then, let's render the image with ",(0,a.kt)("inlineCode",{parentName:"p"},"Overworld_Tileset.png"),"."),(0,a.kt)("h3",{id:"use-cssspriteatlasrenderer"},"Use ",(0,a.kt)("inlineCode",{parentName:"h3"},"CssSpriteAtlasRenderer")),(0,a.kt)("p",null,"Load the image with proper row and column count."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/asset/Bootstrapper.ts"',title:'"src/asset/Bootstrapper.ts"'},'import OverworldTileset from "./image/Overworld_Tileset.png";\n//...\n.withChild(instantiater.buildGameObject("test-sprite-atlas")\n    .withComponent(CssSpriteAtlasRenderer, c => {\n        c.asyncSetImageFromPath(OverworldTileset, 18, 13);\n        c.imageWidth = 1;\n        c.imageHeight = 1;\n        c.viewScale = 1;\n    }))\n    \n.withChild(instantiater.buildGameObject("camera")\n//...\n')),(0,a.kt)(s.Z,{bootstrapper:g,ignoreEvents:!0,mdxType:"DocumentGame"}),(0,a.kt)("p",null,"The top leftmost tile of the Sprite Atlas was rendered."),(0,a.kt)("p",null,"Sprite Atlas has a property called imageIndex, which, as the value increases,\nselects tiles to render from left to right, top to bottom."),(0,a.kt)("p",null,"So ",(0,a.kt)("strong",{parentName:"p"},"we need to indexing the image to choose which tiles to use"),"."),(0,a.kt)("h3",{id:"draw-imageindex"},"Draw ImageIndex"),(0,a.kt)("p",null,"Let's try scripting the index drawing."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/asset/script/DrawIndex.ts"',title:'"src/asset/script/DrawIndex.ts"'},'import { Color, Component, CssTextRenderer } from "the-world-engine";\nimport { Vector2, Vector3 } from "three/src/Three";\n\nexport class DrawIndex extends Component {\n    public column = 18;\n    public row = 13;\n\n    public awake(): void {\n        for (let i = 0; i < this.row; i++) {\n            for (let j = 0; j < this.column; j++) {\n                this.spawnText(new Vector2(j + 0.5, this.row - 1 - i), i * this.column + j);\n            }\n        }\n    }\n\n    private spawnText(pos: Vector2, index: number): void {\n        this.engine.scene.addChildFromBuilder(\n            this.engine.instantiater.buildGameObject("text", new Vector3(pos.x, pos.y, 10))\n                .withComponent(CssTextRenderer, c => {\n                    c.text = index.toString();\n                    c.textColor = new Color(0, 0, 0);\n                    c.viewScale = 0.05;\n                })\n        );\n    }\n}\n')),(0,a.kt)("p",null,"to use simple for loop to spawn text."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/asset/Bootstrapper.ts"',title:'"src/asset/Bootstrapper.ts"'},'.withChild(instantiater.buildGameObject("test-sprite-atlas")\n    .active(false) //disable the sprite atlas renderer for now\n    .withComponent(CssSpriteAtlasRenderer, c => {\n        //...\n    }))\n\n.withChild(instantiater.buildGameObject("draw-index")\n    .withComponent(DrawIndex))\n')),(0,a.kt)("p",null,"Let's add it to the world and deactivate the test-sprite-atlas for a while"),(0,a.kt)(s.Z,{bootstrapper:k,ignoreEvents:!0,mdxType:"DocumentGame"}),(0,a.kt)("p",null,"You can see that the index was spawned."),(0,a.kt)("p",null,"Now let's superimpose the image below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript",metastring:'title="src/asset/Bootstrapper.ts"',title:'"src/asset/Bootstrapper.ts"'},'.withChild(instantiater.buildGameObject("draw-index")\n    .withComponent(DrawIndex))\n\n// added\n.withChild(instantiater.buildGameObject("overworld-tileset", new Vector3(-0.5, -0.5, 0))\n    .withComponent(CssSpriteRenderer, c => {\n        c.asyncSetImageFromPath(OverworldTileset);\n        c.centerOffset = new Vector2(0.5, 0.5);\n        c.imageWidth = 18;\n        c.imageHeight = 13;\n    }))\n')),(0,a.kt)(s.Z,{bootstrapper:b,mdxType:"DocumentGame"}),(0,a.kt)("p",null,"now we know imageIndices."),(0,a.kt)("p",null,"Once you draw an image index like this, you can easily find the index you want."))}O.isMDXComponent=!0},9484:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/Overworld_Tileset-1c44075b314e79caada3455aa25f5809.png"},564:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/char_spritesheet-6b6a6acd99180f91c1aad1383dddc3cd.png"},6426:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/Overworld_Tileset-1c44075b314e79caada3455aa25f5809.png"}}]);